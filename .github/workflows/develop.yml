name: Develop CI/CD

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

env:
  NODE_VERSION: '20'
  DOCKER_IMAGE: brinkhat/birthday-planner

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: .next
          retention-days: 1

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  docker-build-test:
    name: Docker Build Test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (test only, no push)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: birthday-planner:pr-test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

  docker-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:develop
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:develop
          cache-to: type=inline
          platforms: linux/amd64

  ci-summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [lint, build, test, docker-build-test, docker-push]
    if: always()

    steps:
      - name: Check job results
        run: |
          echo "=== Develop CI/CD Summary ==="
          echo "Event: ${{ github.event_name }}"
          echo "Branch: ${{ github.ref }}"
          echo ""
          echo "Job Results:"
          echo "  Lint: ${{ needs.lint.result }}"
          echo "  Build: ${{ needs.build.result }}"
          echo "  Test: ${{ needs.test.result }}"
          echo "  Docker Build Test: ${{ needs.docker-build-test.result }}"
          echo "  Docker Push: ${{ needs.docker-push.result }}"
          echo ""

          # Check for failures
          if [ "${{ needs.lint.result }}" != "success" ] || \
             [ "${{ needs.build.result }}" != "success" ] || \
             [ "${{ needs.test.result }}" != "success" ]; then
            echo "❌ CI checks failed"
            exit 1
          fi

          # Check docker jobs (only one runs depending on event type)
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            if [ "${{ needs.docker-build-test.result }}" != "success" ]; then
              echo "❌ Docker build test failed"
              exit 1
            fi
          elif [ "${{ github.event_name }}" == "push" ]; then
            if [ "${{ needs.docker-push.result }}" != "success" ]; then
              echo "❌ Docker push failed"
              exit 1
            fi
          fi

          echo "✅ All CI checks passed"
